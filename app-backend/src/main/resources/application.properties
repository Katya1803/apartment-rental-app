spring.application.name=ApartmentRental

# Postgres config
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

# JPA/Hibernate properties
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=20000

# Security
app.security.cors.allowed-origins=${APP_SECURITY_CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001,http://localhost:5173}

# File upload
app.upload.path=${APP_UPLOAD_PATH:uploads/}
app.upload.base-url=${APP_UPLOAD_BASE_URL:/uploads/}
app.upload.max-file-size=${APP_UPLOAD_MAX_FILE_SIZE:10485760}
app.upload.max-request-size=${APP_UPLOAD_MAX_REQUEST_SIZE:52428800}

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=50MB
spring.servlet.multipart.resolve-lazily=false

# Static resources
spring.web.resources.static-locations=classpath:/static/,file:uploads/
spring.mvc.static-path-pattern=/uploads/**

# Async config
spring.task.execution.pool.core-size=2
spring.task.execution.pool.max-size=5
spring.task.execution.pool.queue-capacity=100

# Jackson
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.deserialization.fail-on-unknown-properties=false
spring.jackson.serialization.fail-on-empty-beans=false
spring.jackson.default-property-inclusion=NON_NULL

# Locale
spring.web.locale=vi
spring.web.locale-resolver=accept_header

# JWT
app.jwt.secret=${APP_JWT_SECRET}
app.jwt.access-token-expiration=${APP_JWT_ACCESS_TOKEN_EXPIRATION:86400000}
app.jwt.refresh-token-expiration=${APP_JWT_REFRESH_TOKEN_EXPIRATION:604800000}

# Logging
logging.level.com.katya.app=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Admin seed
app.admin.email=${APP_ADMIN_EMAIL}
app.admin.password=${APP_ADMIN_PASSWORD}
app.admin.full-name=${APP_ADMIN_FULL_NAME:Q Apartment Admin}
app.admin.role=${APP_ADMIN_ROLE:SUPER_ADMIN}

# Error details
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=on_param

# Cloudinary
app.cloudinary.cloud-name=${CLOUDINARY_CLOUD_NAME}
app.cloudinary.api-key=${CLOUDINARY_API_KEY}
app.cloudinary.api-secret=${CLOUDINARY_API_SECRET}
app.cloudinary.folder=${CLOUDINARY_FOLDER:q-apartment}

# Railway will inject PORT automatically
server.port=${PORT:8080}
