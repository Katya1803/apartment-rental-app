spring.application.name=ApartmentRental

# Postgres config
spring.datasource.url=jdbc:postgresql://dpg-d2r9qj6r433s73fc226g-a.singapore-postgres.render.com:5432/apartment_rental
spring.datasource.username=apartment_rental_user
spring.datasource.password=qO1vUEDLNtF2mYDEnPd9W4UHGYU2yF2j

# JPA/Hibernate properties
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Enable JPA Auditing for created_at/updated_at fields
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

# Connection pool settings
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=20000

# ===========================================
# SECURITY CONFIGURATION
# ===========================================
app.security.cors.allowed-origins=http://localhost:3000,http://localhost:3001,http://localhost:5173

# ===========================================
# FILE UPLOAD CONFIGURATION
# ===========================================
# Spring Boot file upload settings
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=50MB
spring.servlet.multipart.resolve-lazily=false

# Custom upload configuration
app.upload.path=uploads/
app.upload.base-url=/uploads/
app.upload.max-file-size=10485760
app.upload.max-request-size=52428800

# ===========================================
# STATIC RESOURCES CONFIGURATION
# ===========================================
# Serve uploaded files
spring.web.resources.static-locations=classpath:/static/,file:uploads/
spring.mvc.static-path-pattern=/uploads/**

# ===========================================
# ASYNC CONFIGURATION
# ===========================================
spring.task.execution.pool.core-size=2
spring.task.execution.pool.max-size=5
spring.task.execution.pool.queue-capacity=100

# ===========================================
# JACKSON CONFIGURATION
# ===========================================
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.deserialization.fail-on-unknown-properties=false
spring.jackson.serialization.fail-on-empty-beans=false
spring.jackson.default-property-inclusion=NON_NULL

# ===========================================
# LOCALE CONFIGURATION
# ===========================================
spring.web.locale=vi
spring.web.locale-resolver=accept_header

# ===========================================
# JWT CONFIGURATION
# ===========================================
# IMPORTANT: Use a proper secret key in production (base64 encoded, 256+ bits)
app.jwt.secret=dGhpc2lzYXNlY3JldGtleWZvcmp3dHRva2VuZ2VuZXJhdGlvbmFuZHNob3VsZGJlY2hhbmdlZGlucHJvZHVjdGlvbmVudmlyb25tZW50
app.jwt.access-token-expiration=86400000
app.jwt.refresh-token-expiration=604800000

# ===========================================
# LOGGING CONFIGURATION
# ===========================================
logging.level.com.katya.app=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# ===========================================
# ADMIN SEED CONFIGURATION
# ===========================================
app.admin.email=admin@qapartment.com
app.admin.password=Admin@123456
app.admin.full-name=Q Apartment Admin
app.admin.role=SUPER_ADMIN

# Enable detailed error messages in development
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=on_param

# Cloudinary Configuration
app.cloudinary.cloud-name=drockdmwz
app.cloudinary.api-key=864927214567471
app.cloudinary.api-secret=_8aMss9tK7zeyRtWSS04J0vf3H8
app.cloudinary.folder=q-apartment

# Development port (default is 8080)
server.port=8080